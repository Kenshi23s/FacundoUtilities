//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Global/Finput/GenericController 1.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GenericController1 : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GenericController1()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GenericController 1"",
    ""maps"": [
        {
            ""name"": ""Controller"",
            ""id"": ""9653dbf8-6d3b-4210-8c31-2943414af2d3"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""eec61fc2-4cfb-44ba-8945-5b80ab4adc86"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=10)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Axis_1"",
                    ""type"": ""Value"",
                    ""id"": ""db41d374-f491-4566-a34d-a73e290d2dbf"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Axis_2"",
                    ""type"": ""Value"",
                    ""id"": ""1d80cf59-9b6d-4dcb-aa31-a754afe2a427"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Fire_1"",
                    ""type"": ""Button"",
                    ""id"": ""57cea46e-f8d5-4f36-bd98-976f15586858"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire_2"",
                    ""type"": ""Button"",
                    ""id"": ""d2cf3ba2-2d5d-4c90-a6af-330f47a67fca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SWITCHWEAPON"",
                    ""type"": ""Value"",
                    ""id"": ""19c5ddef-e8fc-494e-87cf-78cb16276ccc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FirstWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""1c497c3f-43fd-42ac-bc83-35f1cd4575ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""30a12eac-a1a4-4032-9954-cb6dcfc57fe3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThirdWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""252a287b-ca30-41b9-9a28-efdee66c63ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FourthWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""1918b421-4a4b-47a5-8627-d26dc95d2a1b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""b5110475-40d4-4b1c-8e61-9f54d11ca27d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axis_1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5ca51268-e9ca-47bb-95f6-06cd0d144900"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axis_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""83dea8d1-cfad-49fe-95c5-790815e99b5b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axis_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""59198f82-2bd3-4035-b1ee-8f57d5913d12"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axis_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d309b1ff-b18e-452e-b26d-cdf89ab49e79"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axis_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""89ed3666-bf03-4f23-9dec-2a23670c2c33"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""Axis_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a95ba5e-7857-44df-8983-27243132d53a"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""Axis_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f566d2b-415d-413b-ba04-a1ae4979aa1c"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""Axis_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e92253f-01b5-457e-ac97-3454e90dc33b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5734b24d-217c-42be-8f2b-79f597b452cb"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ae0128d-d1a9-4fc2-979a-82bf09a52ee4"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a32abd8-7000-4e20-875c-3e8578507ed7"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0228959-6b61-4506-985c-34f32d6de86c"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""SWITCHWEAPON"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2218f7fe-a973-42b5-ad5f-97cb02247411"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""94565c84-d880-41cb-9d9e-ec57b4d217a6"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0c5da6b-edfc-4056-9119-9986b9c810b8"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8180bf7d-1a02-44f4-a400-63ce6e5ca4eb"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf9e784f-03e7-4492-af8f-d43530bab96d"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThirdWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5affb8a-631a-47a9-bbd6-2fbeb5630b12"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FourthWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Controller"",
            ""bindingGroup"": ""Controller"",
            ""devices"": []
        }
    ]
}");
        // Controller
        m_Controller = asset.FindActionMap("Controller", throwIfNotFound: true);
        m_Controller_Jump = m_Controller.FindAction("Jump", throwIfNotFound: true);
        m_Controller_Axis_1 = m_Controller.FindAction("Axis_1", throwIfNotFound: true);
        m_Controller_Axis_2 = m_Controller.FindAction("Axis_2", throwIfNotFound: true);
        m_Controller_Fire_1 = m_Controller.FindAction("Fire_1", throwIfNotFound: true);
        m_Controller_Fire_2 = m_Controller.FindAction("Fire_2", throwIfNotFound: true);
        m_Controller_SWITCHWEAPON = m_Controller.FindAction("SWITCHWEAPON", throwIfNotFound: true);
        m_Controller_FirstWeapon = m_Controller.FindAction("FirstWeapon", throwIfNotFound: true);
        m_Controller_SecondWeapon = m_Controller.FindAction("SecondWeapon", throwIfNotFound: true);
        m_Controller_ThirdWeapon = m_Controller.FindAction("ThirdWeapon", throwIfNotFound: true);
        m_Controller_FourthWeapon = m_Controller.FindAction("FourthWeapon", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Controller
    private readonly InputActionMap m_Controller;
    private IControllerActions m_ControllerActionsCallbackInterface;
    private readonly InputAction m_Controller_Jump;
    private readonly InputAction m_Controller_Axis_1;
    private readonly InputAction m_Controller_Axis_2;
    private readonly InputAction m_Controller_Fire_1;
    private readonly InputAction m_Controller_Fire_2;
    private readonly InputAction m_Controller_SWITCHWEAPON;
    private readonly InputAction m_Controller_FirstWeapon;
    private readonly InputAction m_Controller_SecondWeapon;
    private readonly InputAction m_Controller_ThirdWeapon;
    private readonly InputAction m_Controller_FourthWeapon;
    public struct ControllerActions
    {
        private @GenericController1 m_Wrapper;
        public ControllerActions(@GenericController1 wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_Controller_Jump;
        public InputAction @Axis_1 => m_Wrapper.m_Controller_Axis_1;
        public InputAction @Axis_2 => m_Wrapper.m_Controller_Axis_2;
        public InputAction @Fire_1 => m_Wrapper.m_Controller_Fire_1;
        public InputAction @Fire_2 => m_Wrapper.m_Controller_Fire_2;
        public InputAction @SWITCHWEAPON => m_Wrapper.m_Controller_SWITCHWEAPON;
        public InputAction @FirstWeapon => m_Wrapper.m_Controller_FirstWeapon;
        public InputAction @SecondWeapon => m_Wrapper.m_Controller_SecondWeapon;
        public InputAction @ThirdWeapon => m_Wrapper.m_Controller_ThirdWeapon;
        public InputAction @FourthWeapon => m_Wrapper.m_Controller_FourthWeapon;
        public InputActionMap Get() { return m_Wrapper.m_Controller; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ControllerActions set) { return set.Get(); }
        public void SetCallbacks(IControllerActions instance)
        {
            if (m_Wrapper.m_ControllerActionsCallbackInterface != null)
            {
                @Jump.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnJump;
                @Axis_1.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnAxis_1;
                @Axis_1.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnAxis_1;
                @Axis_1.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnAxis_1;
                @Axis_2.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnAxis_2;
                @Axis_2.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnAxis_2;
                @Axis_2.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnAxis_2;
                @Fire_1.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnFire_1;
                @Fire_1.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnFire_1;
                @Fire_1.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnFire_1;
                @Fire_2.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnFire_2;
                @Fire_2.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnFire_2;
                @Fire_2.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnFire_2;
                @SWITCHWEAPON.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnSWITCHWEAPON;
                @SWITCHWEAPON.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnSWITCHWEAPON;
                @SWITCHWEAPON.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnSWITCHWEAPON;
                @FirstWeapon.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnFirstWeapon;
                @FirstWeapon.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnFirstWeapon;
                @FirstWeapon.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnFirstWeapon;
                @SecondWeapon.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnSecondWeapon;
                @SecondWeapon.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnSecondWeapon;
                @SecondWeapon.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnSecondWeapon;
                @ThirdWeapon.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnThirdWeapon;
                @ThirdWeapon.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnThirdWeapon;
                @ThirdWeapon.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnThirdWeapon;
                @FourthWeapon.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnFourthWeapon;
                @FourthWeapon.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnFourthWeapon;
                @FourthWeapon.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnFourthWeapon;
            }
            m_Wrapper.m_ControllerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Axis_1.started += instance.OnAxis_1;
                @Axis_1.performed += instance.OnAxis_1;
                @Axis_1.canceled += instance.OnAxis_1;
                @Axis_2.started += instance.OnAxis_2;
                @Axis_2.performed += instance.OnAxis_2;
                @Axis_2.canceled += instance.OnAxis_2;
                @Fire_1.started += instance.OnFire_1;
                @Fire_1.performed += instance.OnFire_1;
                @Fire_1.canceled += instance.OnFire_1;
                @Fire_2.started += instance.OnFire_2;
                @Fire_2.performed += instance.OnFire_2;
                @Fire_2.canceled += instance.OnFire_2;
                @SWITCHWEAPON.started += instance.OnSWITCHWEAPON;
                @SWITCHWEAPON.performed += instance.OnSWITCHWEAPON;
                @SWITCHWEAPON.canceled += instance.OnSWITCHWEAPON;
                @FirstWeapon.started += instance.OnFirstWeapon;
                @FirstWeapon.performed += instance.OnFirstWeapon;
                @FirstWeapon.canceled += instance.OnFirstWeapon;
                @SecondWeapon.started += instance.OnSecondWeapon;
                @SecondWeapon.performed += instance.OnSecondWeapon;
                @SecondWeapon.canceled += instance.OnSecondWeapon;
                @ThirdWeapon.started += instance.OnThirdWeapon;
                @ThirdWeapon.performed += instance.OnThirdWeapon;
                @ThirdWeapon.canceled += instance.OnThirdWeapon;
                @FourthWeapon.started += instance.OnFourthWeapon;
                @FourthWeapon.performed += instance.OnFourthWeapon;
                @FourthWeapon.canceled += instance.OnFourthWeapon;
            }
        }
    }
    public ControllerActions @Controller => new ControllerActions(this);
    private int m_ControllerSchemeIndex = -1;
    public InputControlScheme ControllerScheme
    {
        get
        {
            if (m_ControllerSchemeIndex == -1) m_ControllerSchemeIndex = asset.FindControlSchemeIndex("Controller");
            return asset.controlSchemes[m_ControllerSchemeIndex];
        }
    }
    public interface IControllerActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnAxis_1(InputAction.CallbackContext context);
        void OnAxis_2(InputAction.CallbackContext context);
        void OnFire_1(InputAction.CallbackContext context);
        void OnFire_2(InputAction.CallbackContext context);
        void OnSWITCHWEAPON(InputAction.CallbackContext context);
        void OnFirstWeapon(InputAction.CallbackContext context);
        void OnSecondWeapon(InputAction.CallbackContext context);
        void OnThirdWeapon(InputAction.CallbackContext context);
        void OnFourthWeapon(InputAction.CallbackContext context);
    }
}
